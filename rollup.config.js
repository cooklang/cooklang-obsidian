import typescript from '@rollup/plugin-typescript';
import {nodeResolve} from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import postcss from 'rollup-plugin-postcss';
import url from '@rollup/plugin-url';
import * as sass from 'sass';

const isProd = (process.env.BUILD === 'production');
const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugin's github repository
*/
`;

export default {
  input: 'src/main.ts',
  output: {
    dir: '.',
    sourcemap: 'inline',
    sourcemapExcludeSources: isProd,
    format: 'cjs',
    exports: 'default',
    banner
  },
  external: ['obsidian', 'codemirror'],
  plugins: [
    typescript({
      tsconfig: './tsconfig.json',
      noEmitOnError: true,
      sourceMap: true,
      inlineSources: !isProd
    }),
    nodeResolve({
      browser: true,
      preferBuiltins: false
    }),
    commonjs({
      include: ['node_modules/**', 'src/mode/**']
    }),
    postcss({
      extract: 'styles.css',
      modules: false,
      use: {
        sass: {
          implementation: sass,
          sassOptions: {
            outputStyle: 'compressed'
          }
        }
      }
    }),
    url({
      include: ['**/*.mp3'],
      limit: 100000
    })
  ]
};
